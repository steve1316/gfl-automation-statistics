/* tslint:disable */
const { writeFile, existsSync, mkdirSync } = require('fs');
const { argv } = require('yargs');

require('dotenv').config();
const environment = argv.environment;

// Helper function to write the necessary environment files.
const writeFileUsingFS = (
  targetPath: string,
  environmentFileContent: string
) => {
  writeFile(targetPath, environmentFileContent, (err: Error) => {
    if (err) console.error(err);

    if (environmentFileContent !== '')
      console.log(`Successfully wrote .env variables to ${targetPath}`);
  });
};

// Provide path to the environments directory and create the directory if it does not exist.
const envDirectory = './src/environments';
if (!existsSync(envDirectory)) mkdirSync(envDirectory);

// Create the environment.prod.ts and environment.ts files if they do not exist.
writeFileUsingFS(envDirectory + '/environment.prod.ts', '');
writeFileUsingFS(envDirectory + '/environment.ts', '');

// Check if the command line argument of `prod` was provided to indicate production environment.
// Then select the correct targetPath.
const isProductionEnv = environment === 'prod';
const targetPath = isProductionEnv
  ? envDirectory + '/environment.prod.ts'
  : envDirectory + '/environment.ts';

// File content for the selected environment file to be dynamically populated from the .env file from dotenv.
const envFileContent = `// This file was autogenerated by dynamically running setEnv.ts and using dotenv.
export const environment = {
  production: false,
  API: '${process.env['API']}'
};`;

writeFileUsingFS(targetPath, envFileContent);

/* tslint:enable */
